'use strict';

var cov_2b3dyweba9 = function () {
    var path = 'D:\\WebStorm\\Jiyuan Mao\\OnlineLibrary\\models\\users.js',
        hash = 'e89e4d7f6d41a99b4094a19b936ee05e797f97dd',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: 'D:\\WebStorm\\Jiyuan Mao\\OnlineLibrary\\models\\users.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 15
                },
                end: {
                    line: 1,
                    column: 34
                }
            },
            '1': {
                start: {
                    line: 3,
                    column: 17
                },
                end: {
                    line: 8,
                    column: 26
                }
            },
            '2': {
                start: {
                    line: 10,
                    column: 0
                },
                end: {
                    line: 10,
                    column: 52
                }
            }
        },
        fnMap: {},
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0
        },
        f: {},
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var mongoose = (cov_2b3dyweba9.s[0]++, require('mongoose'));

var UserSchema = (cov_2b3dyweba9.s[1]++, new mongoose.Schema({
    username: String,
    password: String,
    usertype: String
}, { collection: 'usersdb' }));

cov_2b3dyweba9.s[2]++;
module.exports = mongoose.model('User', UserSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlVzZXJTY2hlbWEiLCJTY2hlbWEiLCJ1c2VybmFtZSIsIlN0cmluZyIsInBhc3N3b3JkIiwidXNlcnR5cGUiLCJjb2xsZWN0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxtQ0FBV0MsUUFBUSxVQUFSLENBQVgsQ0FBSjs7QUFFQSxJQUFJQyxxQ0FBYSxJQUFJRixTQUFTRyxNQUFiLENBQW9CO0FBQ2pDQyxjQUFVQyxNQUR1QjtBQUVqQ0MsY0FBVUQsTUFGdUI7QUFHakNFLGNBQVVGO0FBSHVCLENBQXBCLEVBS2pCLEVBQUVHLFlBQVksU0FBZCxFQUxpQixDQUFiLENBQUo7OztBQU9BQyxPQUFPQyxPQUFQLEdBQWlCVixTQUFTVyxLQUFULENBQWUsTUFBZixFQUF1QlQsVUFBdkIsQ0FBakIiLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiRDovV2ViU3Rvcm0vSml5dWFuIE1hby9PbmxpbmVMaWJyYXJ5L21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5sZXQgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gICAgdXNlcm5hbWU6IFN0cmluZyxcclxuICAgIHBhc3N3b3JkOiBTdHJpbmcsXHJcbiAgICB1c2VydHlwZTogU3RyaW5nXHJcbn0sXHJcbnsgY29sbGVjdGlvbjogJ3VzZXJzZGInIH0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIFVzZXJTY2hlbWEpO1xyXG4iXX0=